#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include <vfs.h>
#include <vfs_local_fs.h>

static void error_vfs_connection_string_invalid() {
  fprintf(stderr,"Unable to initialize VFS handler (reason=Invalid "
	  "connection string).\n");
}

static void vfs_initialize(vfs_h* vfs, const vfs_config* config) {

  if (!config || !config->connection_string) {
    error_vfs_connection_string_invalid();
  }

  if (!strncmp(config->connection_string, "local://", 8)) {
    vfs->open = vfs_local_fs_open;
    vfs->close = vfs_local_fs_close;
  }
  else if (!strncmp(config->connection_string, "ftp://", 6)) {
  }
  else {
    error_vfs_connection_string_invalid();
  }
  
}

// //////////////////////////////////////////////////////////////////////////

extern vfs_h* vfs_new(const vfs_config* config) {

  vfs_h* vfs = malloc(sizeof(vfs_h));

  if (vfs == NULL) {
    fprintf(stderr, "Unable to create new VFS handler.\n");
    return NULL;
  }

  vfs_initialize(vfs, config);
  
  return vfs;
}

extern void vfs_close(vfs_h* vfs) {

  if (vfs) {
    vfs->close();
    free(vfs);
    vfs = NULL;
  }
}


